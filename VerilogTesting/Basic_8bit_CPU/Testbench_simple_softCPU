#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x9c2d00 .scope module, "softCPU_testbench" "softCPU_testbench" 2 2;
 .timescale 0 0;
v0xa28200_0 .var "addressIn", 15 0;
v0xa282a0_0 .net "addressOut", 15 0, C4<zzzzzzzzzzzzzzzz>; 0 drivers
v0xa28350_0 .var "clock", 0 0;
v0xa28400_0 .var "instruction", 25 0;
v0xa284e0_0 .net "instructionPointer", 15 0, v0xa271d0_0; 1 drivers
v0xa28590_0 .var "valueIn", 7 0;
v0xa28610_0 .net "valueOut", 7 0, v0xa27ff0_0; 1 drivers
S_0x9c12c0 .scope module, "softCPU" "control_matrix" 2 136, 3 1, S_0x9c2d00;
 .timescale 0 0;
v0xa26e80_0 .net "addressIn", 15 0, v0xa28200_0; 1 drivers
v0xa26f40_0 .alias "addressOut", 15 0, v0xa282a0_0;
v0xa26fe0_0 .net "clock", 0 0, v0xa28350_0; 1 drivers
v0xa27080_0 .var "commandCode", 3 0;
v0xa27130_0 .net "instruction", 25 0, v0xa28400_0; 1 drivers
v0xa271d0_0 .var "instructionPointer", 15 0;
v0xa272b0_0 .var "registerA", 7 0;
v0xa27350_0 .var "registerB", 7 0;
v0xa27440_0 .var "registerC", 7 0;
v0xa274e0_0 .var "registerD", 7 0;
v0xa275e0_0 .var "registerE", 7 0;
v0xa27680_0 .var "registerF", 7 0;
v0xa27790_0 .var "registerG", 7 0;
v0xa27830_0 .var "registerH", 7 0;
v0xa27950_0 .var "registerI", 7 0;
v0xa279f0_0 .var "registerJ", 7 0;
v0xa278b0_0 .var "registerK", 7 0;
v0xa27b40_0 .var "registerL", 7 0;
v0xa27c60_0 .var "registerM", 7 0;
v0xa27ce0_0 .var "registerN", 7 0;
v0xa27bc0_0 .var "registerO", 7 0;
v0xa27e10_0 .var "registerP", 7 0;
v0xa27d60_0 .var "value1Internal", 7 0;
v0xa27f50_0 .var "value2Internal", 7 0;
v0xa27eb0_0 .var "value3Internal", 7 0;
v0xa280a0_0 .net "valueIn", 7 0, v0xa28590_0; 1 drivers
v0xa27ff0_0 .var "valueOut", 7 0;
E_0x9e29c0 .event posedge, v0xa26fe0_0;
S_0xa26b90 .scope task, "regToValue" "regToValue" 3 58, 3 58, S_0x9c12c0;
 .timescale 0 0;
v0xa26c80_0 .var "registerSelector", 3 0;
v0xa26d40_0 .var "tempValueInternal", 7 0;
v0xa26de0_0 .var "valueInternalSelector", 3 0;
TD_softCPU_testbench.softCPU.regToValue ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 0, 4;
    %jmp/0xz  T_0.0, 4;
    %load/v 8, v0xa272b0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/0xz  T_0.2, 4;
    %load/v 8, v0xa27350_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.3;
T_0.2 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 2, 4;
    %jmp/0xz  T_0.4, 4;
    %load/v 8, v0xa27440_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.5;
T_0.4 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 3, 4;
    %jmp/0xz  T_0.6, 4;
    %load/v 8, v0xa274e0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.7;
T_0.6 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 4, 4;
    %jmp/0xz  T_0.8, 4;
    %load/v 8, v0xa275e0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.9;
T_0.8 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 5, 4;
    %jmp/0xz  T_0.10, 4;
    %load/v 8, v0xa27680_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.11;
T_0.10 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 6, 4;
    %jmp/0xz  T_0.12, 4;
    %load/v 8, v0xa27790_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.13;
T_0.12 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 7, 4;
    %jmp/0xz  T_0.14, 4;
    %load/v 8, v0xa27830_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.15;
T_0.14 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 8, 4;
    %jmp/0xz  T_0.16, 4;
    %load/v 8, v0xa27950_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.17;
T_0.16 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 9, 4;
    %jmp/0xz  T_0.18, 4;
    %load/v 8, v0xa279f0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.19;
T_0.18 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 10, 4;
    %jmp/0xz  T_0.20, 4;
    %load/v 8, v0xa278b0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.21;
T_0.20 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 11, 4;
    %jmp/0xz  T_0.22, 4;
    %load/v 8, v0xa27b40_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.23;
T_0.22 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 12, 4;
    %jmp/0xz  T_0.24, 4;
    %load/v 8, v0xa27c60_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.25;
T_0.24 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 13, 4;
    %jmp/0xz  T_0.26, 4;
    %load/v 8, v0xa27ce0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.27;
T_0.26 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 14, 4;
    %jmp/0xz  T_0.28, 4;
    %load/v 8, v0xa27bc0_0, 8;
    %set/v v0xa26d40_0, 8, 8;
    %jmp T_0.29;
T_0.28 ;
    %load/v 8, v0xa26c80_0, 4;
    %cmpi/u 8, 15, 4;
    %jmp/0xz  T_0.30, 4;
    %load/v 8, v0xa27e10_0, 8;
    %set/v v0xa26d40_0, 8, 8;
T_0.30 ;
T_0.29 ;
T_0.27 ;
T_0.25 ;
T_0.23 ;
T_0.21 ;
T_0.19 ;
T_0.17 ;
T_0.15 ;
T_0.13 ;
T_0.11 ;
T_0.9 ;
T_0.7 ;
T_0.5 ;
T_0.3 ;
T_0.1 ;
    %load/v 8, v0xa26de0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 1, 5;
    %jmp/0xz  T_0.32, 4;
    %load/v 8, v0xa26d40_0, 8;
    %set/v v0xa27d60_0, 8, 8;
    %jmp T_0.33;
T_0.32 ;
    %load/v 8, v0xa26de0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 2, 5;
    %jmp/0xz  T_0.34, 4;
    %load/v 8, v0xa26d40_0, 8;
    %set/v v0xa27f50_0, 8, 8;
    %jmp T_0.35;
T_0.34 ;
    %load/v 8, v0xa26de0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 3, 5;
    %jmp/0xz  T_0.36, 4;
    %load/v 8, v0xa26d40_0, 8;
    %set/v v0xa27eb0_0, 8, 8;
T_0.36 ;
T_0.35 ;
T_0.33 ;
    %end;
S_0x9c18c0 .scope task, "valueToReg" "valueToReg" 3 106, 3 106, S_0x9c12c0;
 .timescale 0 0;
v0x9c2fe0_0 .var "registerSelector", 3 0;
v0xa26a50_0 .var "tempValueInternal", 7 0;
v0xa26af0_0 .var "valueInternalSelector", 3 0;
TD_softCPU_testbench.softCPU.valueToReg ;
    %load/v 8, v0xa26af0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 1, 5;
    %jmp/0xz  T_1.38, 4;
    %load/v 8, v0xa27d60_0, 8;
    %set/v v0xa26a50_0, 8, 8;
    %jmp T_1.39;
T_1.38 ;
    %load/v 8, v0xa26af0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 2, 5;
    %jmp/0xz  T_1.40, 4;
    %load/v 8, v0xa27f50_0, 8;
    %set/v v0xa26a50_0, 8, 8;
    %jmp T_1.41;
T_1.40 ;
    %load/v 8, v0xa26af0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 3, 5;
    %jmp/0xz  T_1.42, 4;
    %load/v 8, v0xa27eb0_0, 8;
    %set/v v0xa26a50_0, 8, 8;
T_1.42 ;
T_1.41 ;
T_1.39 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 0, 4;
    %jmp/0xz  T_1.44, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa272b0_0, 8, 8;
    %jmp T_1.45;
T_1.44 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/0xz  T_1.46, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27350_0, 8, 8;
    %jmp T_1.47;
T_1.46 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 2, 4;
    %jmp/0xz  T_1.48, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27440_0, 8, 8;
    %jmp T_1.49;
T_1.48 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 3, 4;
    %jmp/0xz  T_1.50, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa274e0_0, 8, 8;
    %jmp T_1.51;
T_1.50 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 4, 4;
    %jmp/0xz  T_1.52, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa275e0_0, 8, 8;
    %jmp T_1.53;
T_1.52 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 5, 4;
    %jmp/0xz  T_1.54, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27680_0, 8, 8;
    %jmp T_1.55;
T_1.54 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 6, 4;
    %jmp/0xz  T_1.56, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27790_0, 8, 8;
    %jmp T_1.57;
T_1.56 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 7, 4;
    %jmp/0xz  T_1.58, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27830_0, 8, 8;
    %jmp T_1.59;
T_1.58 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 8, 4;
    %jmp/0xz  T_1.60, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27950_0, 8, 8;
    %jmp T_1.61;
T_1.60 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 9, 4;
    %jmp/0xz  T_1.62, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa279f0_0, 8, 8;
    %jmp T_1.63;
T_1.62 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 10, 4;
    %jmp/0xz  T_1.64, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa278b0_0, 8, 8;
    %jmp T_1.65;
T_1.64 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 11, 4;
    %jmp/0xz  T_1.66, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27b40_0, 8, 8;
    %jmp T_1.67;
T_1.66 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 12, 4;
    %jmp/0xz  T_1.68, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27c60_0, 8, 8;
    %jmp T_1.69;
T_1.68 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 13, 4;
    %jmp/0xz  T_1.70, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27ce0_0, 8, 8;
    %jmp T_1.71;
T_1.70 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 14, 4;
    %jmp/0xz  T_1.72, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27bc0_0, 8, 8;
    %jmp T_1.73;
T_1.72 ;
    %load/v 8, v0x9c2fe0_0, 4;
    %cmpi/u 8, 15, 4;
    %jmp/0xz  T_1.74, 4;
    %load/v 8, v0xa26a50_0, 8;
    %set/v v0xa27e10_0, 8, 8;
T_1.74 ;
T_1.73 ;
T_1.71 ;
T_1.69 ;
T_1.67 ;
T_1.65 ;
T_1.63 ;
T_1.61 ;
T_1.59 ;
T_1.57 ;
T_1.55 ;
T_1.53 ;
T_1.51 ;
T_1.49 ;
T_1.47 ;
T_1.45 ;
    %end;
    .scope S_0x9c12c0;
T_2 ;
    %ix/load 0, 16, 0;
    %assign/v0 v0xa271d0_0, 0, 0;
    %end;
    .thread T_2;
    .scope S_0x9c12c0;
T_3 ;
    %wait E_0x9e29c0;
    %ix/load 1, 22, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.0, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.1;
T_3.0 ;
    %mov 8, 2, 4;
T_3.1 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa27080_0, 8, 4;
    %load/v 8, v0xa271d0_0, 16;
    %mov 24, 0, 16;
    %addi 8, 1, 32;
    %set/v v0xa271d0_0, 8, 16;
    %load/v 8, v0xa27080_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/0xz  T_3.2, 4;
    %ix/load 1, 21, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.4, 4;
    %load/x1p 8, v0xa27130_0, 1;
    %jmp T_3.5;
T_3.4 ;
    %mov 8, 2, 1;
T_3.5 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.6, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.8, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.9;
T_3.8 ;
    %mov 8, 2, 4;
T_3.9 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %jmp T_3.7;
T_3.6 ;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.10, 4;
    %load/x1p 8, v0xa27130_0, 8;
    %jmp T_3.11;
T_3.10 ;
    %mov 8, 2, 8;
T_3.11 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0xa27d60_0, 8, 8;
T_3.7 ;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.12, 4;
    %load/x1p 8, v0xa27130_0, 1;
    %jmp T_3.13;
T_3.12 ;
    %mov 8, 2, 1;
T_3.13 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.14, 8;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.16, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.17;
T_3.16 ;
    %mov 8, 2, 4;
T_3.17 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 2, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %jmp T_3.15;
T_3.14 ;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.18, 4;
    %load/x1p 8, v0xa27130_0, 8;
    %jmp T_3.19;
T_3.18 ;
    %mov 8, 2, 8;
T_3.19 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0xa27f50_0, 8, 8;
T_3.15 ;
    %load/v 8, v0xa27d60_0, 8;
    %load/v 16, v0xa27f50_0, 8;
    %add 8, 16, 8;
    %set/v v0xa27eb0_0, 8, 8;
    %movi 8, 3, 4;
    %set/v v0xa26af0_0, 8, 4;
    %load/v 8, v0xa27130_0, 4; Only need 4 of 26 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x9c2fe0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.valueToReg, S_0x9c18c0;
    %join;
    %jmp T_3.3;
T_3.2 ;
    %load/v 8, v0xa27080_0, 4;
    %cmpi/u 8, 3, 4;
    %jmp/0xz  T_3.20, 4;
    %ix/load 1, 21, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.22, 4;
    %load/x1p 8, v0xa27130_0, 1;
    %jmp T_3.23;
T_3.22 ;
    %mov 8, 2, 1;
T_3.23 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.24, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.26, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.27;
T_3.26 ;
    %mov 8, 2, 4;
T_3.27 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %jmp T_3.25;
T_3.24 ;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.28, 4;
    %load/x1p 8, v0xa27130_0, 8;
    %jmp T_3.29;
T_3.28 ;
    %mov 8, 2, 8;
T_3.29 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0xa27d60_0, 8, 8;
T_3.25 ;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.30, 4;
    %load/x1p 8, v0xa27130_0, 1;
    %jmp T_3.31;
T_3.30 ;
    %mov 8, 2, 1;
T_3.31 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.32, 8;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.34, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.35;
T_3.34 ;
    %mov 8, 2, 4;
T_3.35 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 2, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %jmp T_3.33;
T_3.32 ;
    %ix/load 1, 4, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.36, 4;
    %load/x1p 8, v0xa27130_0, 8;
    %jmp T_3.37;
T_3.36 ;
    %mov 8, 2, 8;
T_3.37 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0xa27f50_0, 8, 8;
T_3.33 ;
    %load/v 8, v0xa27d60_0, 8;
    %load/v 16, v0xa27f50_0, 8;
    %sub 8, 16, 8;
    %set/v v0xa27eb0_0, 8, 8;
    %movi 8, 3, 4;
    %set/v v0xa26af0_0, 8, 4;
    %load/v 8, v0xa27130_0, 4; Only need 4 of 26 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x9c2fe0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.valueToReg, S_0x9c18c0;
    %join;
    %jmp T_3.21;
T_3.20 ;
    %load/v 8, v0xa27080_0, 4;
    %cmpi/u 8, 2, 4;
    %jmp/0xz  T_3.38, 4;
    %ix/load 1, 21, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.40, 4;
    %load/x1p 8, v0xa27130_0, 1;
    %jmp T_3.41;
T_3.40 ;
    %mov 8, 2, 1;
T_3.41 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.42, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.44, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.45;
T_3.44 ;
    %mov 8, 2, 4;
T_3.45 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %jmp T_3.43;
T_3.42 ;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.46, 4;
    %load/x1p 8, v0xa27130_0, 8;
    %jmp T_3.47;
T_3.46 ;
    %mov 8, 2, 8;
T_3.47 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0xa27d60_0, 8, 8;
T_3.43 ;
    %load/v 8, v0xa27d60_0, 8;
    %inv 8, 8;
    %set/v v0xa27eb0_0, 8, 8;
    %movi 8, 3, 4;
    %set/v v0xa26af0_0, 8, 4;
    %load/v 8, v0xa27130_0, 4; Only need 4 of 26 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x9c2fe0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.valueToReg, S_0x9c18c0;
    %join;
    %jmp T_3.39;
T_3.38 ;
    %load/v 8, v0xa27080_0, 4;
    %cmpi/u 8, 5, 4;
    %jmp/0xz  T_3.48, 4;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.50, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.51;
T_3.50 ;
    %mov 8, 2, 4;
T_3.51 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.52, 4;
    %load/x1p 8, v0xa27d60_0, 1;
    %jmp T_3.53;
T_3.52 ;
    %mov 8, 2, 1;
T_3.53 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0xz  T_3.54, 8;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.56, 4;
    %load/x1p 8, v0xa27130_0, 16;
    %jmp T_3.57;
T_3.56 ;
    %mov 8, 2, 16;
T_3.57 ;
; Save base=8 wid=16 in lookaside.
    %set/v v0xa271d0_0, 8, 16;
T_3.54 ;
    %jmp T_3.49;
T_3.48 ;
    %load/v 8, v0xa27080_0, 4;
    %cmpi/u 8, 6, 4;
    %jmp/0xz  T_3.58, 4;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.60, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.61;
T_3.60 ;
    %mov 8, 2, 4;
T_3.61 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %load/v 8, v0xa27d60_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %jmp/0xz  T_3.62, 4;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.64, 4;
    %load/x1p 8, v0xa27130_0, 16;
    %jmp T_3.65;
T_3.64 ;
    %mov 8, 2, 16;
T_3.65 ;
; Save base=8 wid=16 in lookaside.
    %set/v v0xa271d0_0, 8, 16;
T_3.62 ;
    %jmp T_3.59;
T_3.58 ;
    %load/v 8, v0xa27080_0, 4;
    %cmpi/u 8, 7, 4;
    %jmp/0xz  T_3.66, 4;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.68, 4;
    %load/x1p 8, v0xa27130_0, 4;
    %jmp T_3.69;
T_3.68 ;
    %mov 8, 2, 4;
T_3.69 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0xa26c80_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0xa26de0_0, 8, 4;
    %fork TD_softCPU_testbench.softCPU.regToValue, S_0xa26b90;
    %join;
    %load/v 8, v0xa27d60_0, 8;
    %mov 16, 0, 1;
    %cmp/u 0, 8, 9;
    %mov 8, 5, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.70, 4;
    %load/x1p 9, v0xa27d60_0, 1;
    %jmp T_3.71;
T_3.70 ;
    %mov 9, 2, 1;
T_3.71 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.72, 8;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.74, 4;
    %load/x1p 8, v0xa27130_0, 16;
    %jmp T_3.75;
T_3.74 ;
    %mov 8, 2, 16;
T_3.75 ;
; Save base=8 wid=16 in lookaside.
    %set/v v0xa271d0_0, 8, 16;
T_3.72 ;
T_3.66 ;
T_3.59 ;
T_3.49 ;
T_3.39 ;
T_3.21 ;
T_3.3 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0x9c2d00;
T_4 ;
    %delay 1, 0;
    %load/v 8, v0xa28350_0, 1;
    %inv 8, 1;
    %set/v v0xa28350_0, 8, 1;
    %jmp T_4;
    .thread T_4;
    .scope S_0x9c2d00;
T_5 ;
    %ix/load 0, 16, 0;
    %assign/v0 v0xa28200_0, 0, 0;
    %ix/load 0, 8, 0;
    %assign/v0 v0xa28590_0, 0, 0;
    %set/v v0xa28350_0, 0, 1;
    %movi 8, 4514193, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 26 "$display", "00100111 + 00011001 = regB";
    %vpi_call 2 27 "$display", "Value1\011Value2\011Value3";
    %vpi_call 2 28 "$display", "%b\011%b\011%b", v0xa27d60_0, v0xa27f50_0, v0xa27eb0_0;
    %vpi_call 2 29 "$display", "RegisterB = %b\012", v0xa27350_0;
    %movi 8, 4497810, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 33 "$display", "00100101 + 00011001 = regC";
    %vpi_call 2 34 "$display", "Value1\011Value2\011Value3";
    %vpi_call 2 35 "$display", "%b\011%b\011%b", v0xa27d60_0, v0xa27f50_0, v0xa27eb0_0;
    %vpi_call 2 36 "$display", "RegisterC = %b\012", v0xa27440_0;
    %movi 8, 6310562, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 40 "$display", "regC + 00010000 = regE";
    %vpi_call 2 41 "$display", "Value1\011Value2\011Value3";
    %vpi_call 2 42 "$display", "%b\011%b\011%b\012", v0xa27d60_0, v0xa27f50_0, v0xa27eb0_0;
    %movi 8, 6303780, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 45 "$display", "regB + regC = regE";
    %vpi_call 2 46 "$display", "%b\011+\011%b\011=\011%b\012", v0xa27350_0, v0xa27440_0, v0xa275e0_0;
    %movi 8, 13624656, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 52 "$display", "01111111 - 01010101 = regA";
    %vpi_call 2 53 "$display", "%b\011%b\011%b\012", v0xa27d60_0, v0xa27f50_0, v0xa272b0_0;
    %movi 8, 12591345, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 56 "$display", "00000001 - 00001111 = regB";
    %vpi_call 2 57 "$display", "%b\011%b\011%b\012", v0xa27d60_0, v0xa27f50_0, v0xa27350_0;
    %movi 8, 14688592, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 60 "$display", "registerB - 00010101 = regA";
    %vpi_call 2 61 "$display", "%b\011%b\011%b\012", v0xa27350_0, v0xa27f50_0, v0xa272b0_0;
    %movi 8, 14700545, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 64 "$display", "registerC - registerA = registerB";
    %vpi_call 2 65 "$display", "%b\011%b\011%b\012", v0xa27440_0, v0xa272b0_0, v0xa27350_0;
    %movi 8, 9084928, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 71 "$display", "Inv(01010101) = registerA";
    %vpi_call 2 72 "$display", "%b\011%b\012", v0xa27d60_0, v0xa272b0_0;
    %movi 8, 10485761, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 75 "$display", "Inv(registerA) = registerB";
    %vpi_call 2 76 "$display", "%b\011%b\012", v0xa272b0_0, v0xa27350_0;
    %set/v v0xa271d0_0, 0, 16;
    %movi 8, 21255228, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 83 "$display", "If regB is < 0. IP is 1";
    %vpi_call 2 84 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %movi 8, 6275073, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 87 "$display", "Changing regB to = 11111110\012";
    %movi 8, 21255228, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 90 "$display", "If regB is < 0. IP is 3";
    %vpi_call 2 91 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %set/v v0xa271d0_0, 0, 16;
    %movi 8, 25449532, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 98 "$display", "If regB is == 0. IP is 1";
    %vpi_call 2 99 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %movi 8, 4194305, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 102 "$display", "Changing regB to = 00000000\012";
    %movi 8, 25449532, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 105 "$display", "If regB is = 0. IP is 3";
    %vpi_call 2 106 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %set/v v0xa271d0_0, 0, 16;
    %movi 8, 29643836, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 113 "$display", "If regB is > 0. IP is 1";
    %vpi_call 2 114 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %movi 8, 6283265, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 117 "$display", "Changing regB to = 11111111\012";
    %movi 8, 29643836, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 120 "$display", "If regB is > 0. IP is 3";
    %vpi_call 2 121 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %movi 8, 5234689, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 124 "$display", "Changing regB to = 01111111\012";
    %movi 8, 29643836, 26;
    %set/v v0xa28400_0, 8, 26;
    %delay 2, 0;
    %vpi_call 2 127 "$display", "If regB is > 0. IP is 5";
    %vpi_call 2 128 "$display", "regB = %b, address output is %b\012", v0xa27350_0, v0xa271d0_0;
    %vpi_call 2 133 "$finish";
    %end;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "./Testbench_simple_softCPU.v";
    "././simple_softCPU.v";
