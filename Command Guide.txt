List of commands and usage syntax

24 bit sentences still

add
	Operations desired
	# + # = registerA 						8b + 8b + 4b = 20b minimum 
	registerA + # = registerB				4b + 8b + 4b = 16b minimum
	registerA + registerB = registerC		4b + 4b + 4b = 12b minimum

	Syntax (26 bit command)
	|opcode|RegisterFlag|         Number1|RegisterFlag|         Number2|OutputRegister|
	|  0001|           0|        01010101|           0|        00000001|          0100|

	|opcode|RegisterFlag|Buffer|Register1|RegisterFlag|Buffer|Register2|OutputRegister|
	|  0001|           1|  0000|     0001|           1|  0000|     0010|          0011|

	|opcode|RegisterFlag|Buffer|Register1|RegisterFlag|          Number|OutputRegister|
	|  0001|           1|  0000|     0001|			 0|        01010101|          0010|

	ISSUE! How to differentiate between a register value and a number value? Add register flags? Ugly but works
	
sub
	Operations desired
	# - # = registerA 						8b + 8b + 4b = 20b minimum 
	registerA - # = registerB				4b + 8b + 4b = 16b minimum
	registerA - registerB = registerC		4b + 4b + 4b = 12b minimum

	Syntax (26 bit command)
	|opcode|RegisterFlag|         Number1|RegisterFlag|         Number2|OutputRegister|
	|  0011|           0|        01010101|           0|        00000001|          0100|

	|opcode|RegisterFlag|Buffer|Register1|RegisterFlag|Buffer|Register2|OutputRegister|
	|  0011|           1|  0000|     0001|           1|  0000|     0010|          0011|

	|opcode|RegisterFlag|Buffer|Register1|RegisterFlag|          Number|OutputRegister|
	|  0011|           1|  0000|     0001|			 0|        01010101|          0010|


inv
	Operations desired
	~# = registerA 							8b + 4b = 12b minimum
	~registerA = registerB 					4b + 4b = 8b minimum

	Syntax (17 bit command, buffer end)
	|opcode|RegisterFlag|         Number|OutputRegister|
	|  0010|           0|       00100100|          0001|

	|opcode|RegisterFlag|Buffer|Register|OutputRegister|
	|  0010| 	       1|  0000|    0001|          0010|

mov
	Load value from memory into a register and vice versa
	Operations desired
	mv addy registerA 						16b + 4b = 20b minimum
	mv # registerA							8b + 4b = 12b minimum
	mv registerA addy						4b + 16b = 20b minimum
	
	Syntax (26 bit command)
	|opcode|InFlag| AddressFlag|         Address|  OutputRegister|
	|  0100|     1|       	  1|0000111100001111|            0001|

	|opcode|InFlag| AddressFlag|Buffer|   Number|  OutputRegister|
	|  0100|     1|           0|  0000| 00001111|            0001|
 
	|opcode|InFlag|RegisterFlag|Register|           OutputAddress|
	|  0100|     0| 		  1|    0001|        0000111100001111|

jfe/l/g
	Branching condition. If value1 is equal to/less than/greater than 0, then set instruction pointer to location
	(add value to value comparators, without going through subtraction?)
	(relies on returning execution here. Add jump return function?
	Operations desired
	registerA, address						4b + 16b = 20b minimum

	Syntax (24 bit command, buffer end)
	|opcode|Register|   OutputAddress|
	|  0101|    0001|0000111100001111|
